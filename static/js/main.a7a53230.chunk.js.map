{"version":3,"sources":["components/Navigation/NavItem/NavItem.tsx","components/Navigation/NavBar/NavBar.tsx","components/Pages/Tabs/Tabs.tsx","components/Pages/TabsPage/TabsPage.tsx","components/App/App.tsx","index.tsx"],"names":["NavItem","props","path","text","to","className","isActive","cn","NavBar","Tabs","tabs","selectedTabById","selectedTab","find","tab","id","isTabSelected","map","title","content","TabsPage","tabId","useParams","App","element","replace","index","ReactDOM","render","document","getElementById"],"mappings":"gPASaA,EAAqB,SAACC,GACjC,IAAQC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KAEd,OACE,cAAC,IAAD,CACEC,GAAIF,EACJG,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OACTC,IAAG,cAAe,CAChB,YAAaD,KAJnB,SAOGH,KCjBMK,EAAa,WACxB,OACE,qBACEH,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAASH,KAAK,IAAIC,KAAK,SACvB,cAAC,EAAD,CAASD,KAAK,QAAQC,KAAK,iBCFxBM,EAAkB,SAACR,GAC9B,IAAQS,EAA8BT,EAA9BS,KAAR,EAAsCT,EAAxBU,uBAAd,MAAgC,EAAhC,EAEMC,EAAcF,EAAKG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,KAC1CK,EAAgB,SAACF,GAAD,OAAcA,EAAIC,KAAOJ,GAE/C,OACE,qCACE,qBAAKN,UAAU,gBAAf,SACE,6BACGK,EAAKO,KAAI,SAAAH,GAAG,OACX,oBACE,UAAQ,MAERT,UAAWE,IAAG,CAAE,YAAaS,EAAcF,KAH7C,SAKE,cAAC,IAAD,CAAMV,GAAE,aAAQU,EAAIC,IAApB,SACGD,EAAII,SAJFJ,EAAIC,WAWjB,qBAAKV,UAAU,QAAQ,UAAQ,aAA/B,SACGO,EAAcA,EAAYO,QAAU,4BChCvCT,EAAO,CACX,CAAEK,GAAI,QAASG,MAAO,QAASC,QAAS,eACxC,CAAEJ,GAAI,QAASG,MAAO,QAASC,QAAS,eACxC,CAAEJ,GAAI,QAASG,MAAO,QAASC,QAAS,gBAG7BC,EAAW,WACtB,IAAQC,EAAUC,cAAVD,MAER,OACE,qCACE,oBAAIhB,UAAU,QAAd,sBAEA,cAAC,EAAD,CACEK,KAAMA,EACNC,gBAAiBU,QCXZE,EAAM,kBACjB,qCACE,cAAC,EAAD,IAEA,qBAAKlB,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOH,KAAK,IAAIsB,QAAS,oBAAInB,UAAU,QAAd,yBACzB,cAAC,IAAD,CAAOH,KAAK,OAAOsB,QAAS,cAAC,IAAD,CAAUpB,GAAG,IAAIqB,SAAO,MACpD,cAAC,IAAD,CAAOvB,KAAK,IAAIsB,QAAS,oBAAInB,UAAU,QAAd,8BACzB,eAAC,IAAD,CAAOH,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOwB,OAAK,EAACF,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOtB,KAAK,SAASsB,QAAS,cAAC,EAAD,oBCf1CG,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a7a53230.chunk.js","sourcesContent":["import { FC } from 'react';\nimport cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  path: string;\n  text: string;\n}\n\nexport const NavItem: FC<Props> = (props) => {\n  const { path, text } = props;\n\n  return (\n    <NavLink\n      to={path}\n      className={({ isActive }) => (\n        cn('navbar-item', {\n          'is-active': isActive,\n        }))}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import { FC } from 'react';\nimport { NavItem } from '../NavItem/NavItem';\n\nexport const NavBar: FC = () => {\n  return (\n    <nav\n      className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n      data-cy=\"Nav\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavItem path=\"/\" text=\"Home\" />\n          <NavItem path=\"/tabs\" text=\"Tabs\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Tab } from '../../../types/Tab';\n\ninterface Props {\n  tabs: Tab[];\n  selectedTabById: string | undefined;\n}\n\nexport const Tabs: FC<Props> = (props) => {\n  const { tabs, selectedTabById = 0 } = props;\n\n  const selectedTab = tabs.find(tab => tab.id === selectedTabById);\n  const isTabSelected = (tab: Tab) => tab.id === selectedTabById;\n\n  return (\n    <>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              data-cy=\"Tab\"\n              key={tab.id}\n              className={cn({ 'is-active': isTabSelected(tab) })}\n            >\n              <Link to={`../${tab.id}`}>\n                {tab.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab ? selectedTab.content : 'Please select a tab'}\n      </div>\n    </>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { Tabs } from '../Tabs/Tabs';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const TabsPage = () => {\n  const { tabId } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">TabsPage</h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabById={tabId}\n      />\n    </>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { NavBar } from '../Navigation/NavBar/NavBar';\nimport { TabsPage } from '../Pages/TabsPage/TabsPage';\n\nexport const App = () => (\n  <>\n    <NavBar />\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n          <Route path=\"tabs\">\n            <Route index element={<TabsPage />} />\n            <Route path=\":tabId\" element={<TabsPage />} />\n          </Route>\n        </Routes>\n      </div>\n    </div>\n  </>\n);\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './components/App/App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}